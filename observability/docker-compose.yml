services:
  # ClickHouse Database
  clickhouse:
    image: clickhouse/clickhouse-server:23.7-alpine
    container_name: signoz-clickhouse
    hostname: clickhouse
    ports:
      - "9000:9000"
      - "8123:8123"
    volumes:
      - ./data/clickhouse:/var/lib/clickhouse/
      - ./config/clickhouse-config.xml:/etc/clickhouse-server/config.xml
      - ./config/clickhouse-users.xml:/etc/clickhouse-server/users.xml
    environment:
      - CLICKHOUSE_DB=signoz_traces
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - signoz-network

  # SigNoz Query Service
  query-service:
    image: signoz/query-service:0.39.0
    container_name: signoz-query-service
    command: ["-config=/root/config/prometheus.yml"]
    volumes:
      - ./config/prometheus.yml:/root/config/prometheus.yml
    environment:
      - ClickHouseUrl=tcp://clickhouse:9000
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
    ports:
      - "6060:6060"
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      clickhouse:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - signoz-network

  # SigNoz Frontend
  frontend:
    image: signoz/frontend:0.39.0
    container_name: signoz-frontend
    restart: unless-stopped
    depends_on:
      - alertmanager
      - query-service
    ports:
      - "3301:3301"
    volumes:
      - ./config/nginx-config.conf:/etc/nginx/conf.d/default.conf
    networks:
      - signoz-network

  # AlertManager
  alertmanager:
    image: signoz/alertmanager:0.23.4
    container_name: signoz-alertmanager
    volumes:
      - ./data/alertmanager:/data
      - ./config/alertmanager-config.yml:/etc/alertmanager/config.yml
    depends_on:
      query-service:
        condition: service_healthy
    restart: unless-stopped
    command:
      - --queryService.url=http://query-service:8080
      - --storage.path=/data
      - --config.file=/etc/alertmanager/config.yml
    ports:
      - "9093:9093"
    networks:
      - signoz-network

  # OpenTelemetry Collector
  otel-collector:
    image: signoz/signoz-otel-collector:0.88.11
    container_name: signoz-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=signoz-otel-collector,service.version=0.88.11
    ports:
      - "1777:1777"     # pprof extension
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver
      - "8888:8888"     # Prometheus metrics
      - "8889:8889"     # Prometheus exporter metrics
      - "13133:13133"   # health_check extension
      - "14250:14250"   # Jaeger gRPC
      - "14268:14268"   # Jaeger HTTP
      - "55679:55679"   # zpages extension
    restart: unless-stopped
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - signoz-network

  # OpenTelemetry Collector Metrics
  otel-collector-metrics:
    image: signoz/signoz-otel-collector:0.88.11
    container_name: signoz-otel-collector-metrics
    command: ["--config=/etc/otel-collector-metrics-config.yaml"]
    volumes:
      - ./config/otel-collector-metrics-config.yaml:/etc/otel-collector-metrics-config.yaml
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=signoz-otel-collector-metrics,service.version=0.88.11
    ports:
      - "1777:1777"     # pprof extension
      - "8888:8888"     # Prometheus metrics
    restart: unless-stopped
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - signoz-network

  # Jaeger Hot R.O.D. Demo (Optional)
  hotrod:
    image: jaegertracing/example-hotrod:latest
    container_name: hotrod
    ports:
      - "8080:8080"
    command: ["all"]
    environment:
      - JAEGER_ENDPOINT=http://otel-collector:14268/api/traces
    depends_on:
      - otel-collector
    networks:
      - signoz-network
    profiles:
      - demo

networks:
  signoz-network:
    driver: bridge

volumes:
  clickhouse-data:
  alertmanager-data: