receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'celebrum-ai-go-metrics'
          scrape_interval: 15s
          metrics_path: '/metrics'
          static_configs:
            - targets: ['host.docker.internal:8080']
          scrape_timeout: 10s
        
        - job_name: 'ccxt-service-metrics'
          scrape_interval: 15s
          metrics_path: '/metrics'
          static_configs:
            - targets: ['host.docker.internal:3001']
          scrape_timeout: 10s
        
        - job_name: 'redis-metrics'
          scrape_interval: 30s
          static_configs:
            - targets: ['host.docker.internal:6379']
          scrape_timeout: 10s
        
        - job_name: 'postgres-metrics'
          scrape_interval: 30s
          static_configs:
            - targets: ['194.233.73.250:5432']
          scrape_timeout: 10s
        
        - job_name: 'node-exporter'
          scrape_interval: 15s
          static_configs:
            - targets: ['host.docker.internal:9100']
          scrape_timeout: 10s
  
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048
  
  memory_limiter:
    limit_mib: 500
    spike_limit_mib: 100
    check_interval: 5s
  
  resource:
    attributes:
      - key: deployment.environment
        value: "development"
        action: upsert
      - key: service.namespace
        value: "celebrum-ai"
        action: upsert
      - key: cluster.name
        value: "celebrum-ai-cluster"
        action: upsert
  
  metricstransform:
    transforms:
      - include: ".*"
        match_type: regexp
        action: update
        operations:
          - action: add_label
            new_label: environment
            new_value: development
          - action: add_label
            new_label: cluster
            new_value: celebrum-ai-cluster

exporters:
  clickhouse:
    endpoint: tcp://clickhouse:9000?dial_timeout=10s&compress=lz4
    database: signoz_metrics
    metrics_table_name: distributed_samples_v2
    time_series_table_name: distributed_time_series_v2
    timeout: 5s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
  
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200
  
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      cluster: "celebrum-ai-cluster"
      environment: "development"

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  
  pprof:
    endpoint: 0.0.0.0:1777

service:
  extensions: [health_check, pprof]
  pipelines:
    metrics:
      receivers: [prometheus, otlp]
      processors: [memory_limiter, resource, metricstransform, batch]
      exporters: [clickhouse, logging]
  
  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888
      level: detailed