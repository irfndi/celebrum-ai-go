
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_test "github.com/irfandi/celebrum-ai-go/internal/api/handlers"


)

var tests = []testing.InternalTest{

	{"TestTechnicalIndicator_Struct", _test.TestTechnicalIndicator_Struct},

	{"TestTradingSignal_Struct", _test.TestTradingSignal_Struct},

	{"TestIndicatorsResponse_Struct", _test.TestIndicatorsResponse_Struct},

	{"TestSignalsResponse_Struct", _test.TestSignalsResponse_Struct},

	{"TestOHLCV_Struct", _test.TestOHLCV_Struct},

	{"TestNewAnalysisHandler", _test.TestNewAnalysisHandler},

	{"TestAnalysisHandler_GetTechnicalIndicators", _test.TestAnalysisHandler_GetTechnicalIndicators},

	{"TestAnalysisHandler_GetTradingSignals", _test.TestAnalysisHandler_GetTradingSignals},

	{"TestAnalysisHandler_calculateSMA", _test.TestAnalysisHandler_calculateSMA},

	{"TestAnalysisHandler_calculateEMA", _test.TestAnalysisHandler_calculateEMA},

	{"TestAnalysisHandler_calculateRSI", _test.TestAnalysisHandler_calculateRSI},

	{"TestAnalysisHandler_calculateMACD", _test.TestAnalysisHandler_calculateMACD},

	{"TestAnalysisHandler_calculateBollingerBands", _test.TestAnalysisHandler_calculateBollingerBands},

	{"TestAnalysisHandler_calculateSupportResistance", _test.TestAnalysisHandler_calculateSupportResistance},

	{"TestAnalysisHandler_calculateIndicators", _test.TestAnalysisHandler_calculateIndicators},

	{"TestAnalysisHandler_getOHLCVData", _test.TestAnalysisHandler_getOHLCVData},

	{"TestAnalysisHandler_simulateOHLCVFromTickers", _test.TestAnalysisHandler_simulateOHLCVFromTickers},

	{"TestAnalysisHandler_generateTradingSignal", _test.TestAnalysisHandler_generateTradingSignal},

	{"TestAnalysisHandler_getAllTradingSignals", _test.TestAnalysisHandler_getAllTradingSignals},

	{"TestNewArbitrageHandler", _test.TestNewArbitrageHandler},

	{"TestArbitrageHandler_BasicFunctionality", _test.TestArbitrageHandler_BasicFunctionality},

	{"TestArbitrageHandler_FindCrossExchangeArbitrage", _test.TestArbitrageHandler_FindCrossExchangeArbitrage},

	{"TestArbitrageHandler_CalculateSMA", _test.TestArbitrageHandler_CalculateSMA},

	{"TestArbitrageHandler_FindArbitrageOpportunities_Integration", _test.TestArbitrageHandler_FindArbitrageOpportunities_Integration},

	{"TestArbitrageHandler_SendArbitrageNotifications", _test.TestArbitrageHandler_SendArbitrageNotifications},

	{"TestArbitrageHandler_DecimalCalculations", _test.TestArbitrageHandler_DecimalCalculations},

	{"TestArbitrageHandler_GetArbitrageOpportunities", _test.TestArbitrageHandler_GetArbitrageOpportunities},

	{"TestArbitrageHandler_GetArbitrageHistory", _test.TestArbitrageHandler_GetArbitrageHistory},

	{"TestArbitrageHandler_GetFundingRateArbitrage", _test.TestArbitrageHandler_GetFundingRateArbitrage},

	{"TestArbitrageHandler_GetFundingRates", _test.TestArbitrageHandler_GetFundingRates},

	{"TestArbitrageHandler_TechnicalAnalysisOpportunities", _test.TestArbitrageHandler_TechnicalAnalysisOpportunities},

	{"TestArbitrageHandler_VolatilityOpportunities", _test.TestArbitrageHandler_VolatilityOpportunities},

	{"TestArbitrageHandler_SpreadOpportunities", _test.TestArbitrageHandler_SpreadOpportunities},

	{"TestArbitrageHandler_GetArbitrageHistory_Internal", _test.TestArbitrageHandler_GetArbitrageHistory_Internal},

	{"TestArbitrageHandler_SendArbitrageNotifications_Integration", _test.TestArbitrageHandler_SendArbitrageNotifications_Integration},

	{"TestArbitrageHandler_FindCrossExchangeOpportunities", _test.TestArbitrageHandler_FindCrossExchangeOpportunities},

	{"TestArbitrageHandler_SendArbitrageNotifications_NilService", _test.TestArbitrageHandler_SendArbitrageNotifications_NilService},

	{"TestArbitrageHandler_SendArbitrageNotifications_Filtering", _test.TestArbitrageHandler_SendArbitrageNotifications_Filtering},

	{"TestArbitrageHandler_ParameterParsing", _test.TestArbitrageHandler_ParameterParsing},

	{"TestArbitrageHandler_FindArbitrageOpportunities_ErrorCases", _test.TestArbitrageHandler_FindArbitrageOpportunities_ErrorCases},

	{"TestArbitrageHandler_FindArbitrageOpportunities_ParameterValidation", _test.TestArbitrageHandler_FindArbitrageOpportunities_ParameterValidation},

	{"TestArbitrageHandler_FindArbitrageOpportunities_SymbolFiltering", _test.TestArbitrageHandler_FindArbitrageOpportunities_SymbolFiltering},

	{"TestArbitrageHandler_FindArbitrageOpportunities_ProfitThresholds", _test.TestArbitrageHandler_FindArbitrageOpportunities_ProfitThresholds},

	{"TestArbitrageHandler_FindArbitrageOpportunities_Limits", _test.TestArbitrageHandler_FindArbitrageOpportunities_Limits},

	{"TestArbitrageHandler_FindArbitrageOpportunities_SortingAndLimiting", _test.TestArbitrageHandler_FindArbitrageOpportunities_SortingAndLimiting},

	{"TestArbitrageHandler_FindArbitrageOpportunities_ContextHandling", _test.TestArbitrageHandler_FindArbitrageOpportunities_ContextHandling},

	{"TestArbitrageHandler_FindArbitrageOpportunities_EdgeCases", _test.TestArbitrageHandler_FindArbitrageOpportunities_EdgeCases},

	{"TestAuthIntegration_RequireAuth", _test.TestAuthIntegration_RequireAuth},

	{"TestAuthIntegration_OptionalAuth", _test.TestAuthIntegration_OptionalAuth},

	{"TestAuthIntegration_MiddlewareChain", _test.TestAuthIntegration_MiddlewareChain},

	{"TestCacheEndpointsIntegration", _test.TestCacheEndpointsIntegration},

	{"TestCacheEndpointsWithRealData", _test.TestCacheEndpointsWithRealData},

	{"TestNewCacheHandler", _test.TestNewCacheHandler},

	{"TestCacheHandler_GetCacheStats", _test.TestCacheHandler_GetCacheStats},

	{"TestCacheHandler_GetCacheStatsByCategory", _test.TestCacheHandler_GetCacheStatsByCategory},

	{"TestCacheHandler_GetCacheMetrics", _test.TestCacheHandler_GetCacheMetrics},

	{"TestCacheHandler_ResetCacheStats", _test.TestCacheHandler_ResetCacheStats},

	{"TestCacheHandler_RecordCacheHit", _test.TestCacheHandler_RecordCacheHit},

	{"TestCacheHandler_RecordCacheMiss", _test.TestCacheHandler_RecordCacheMiss},

	{"TestNewCleanupHandler", _test.TestNewCleanupHandler},

	{"TestCleanupHandler_GetDataStats", _test.TestCleanupHandler_GetDataStats},

	{"TestCleanupHandler_TriggerCleanup", _test.TestCleanupHandler_TriggerCleanup},

	{"TestCleanupHandler_TriggerCleanup_ParameterParsing", _test.TestCleanupHandler_TriggerCleanup_ParameterParsing},

	{"TestParseIntParam", _test.TestParseIntParam},

	{"TestNewExchangeHandler", _test.TestNewExchangeHandler},

	{"TestExchangeHandler_GetExchangeConfig", _test.TestExchangeHandler_GetExchangeConfig},

	{"TestExchangeHandler_AddExchangeToBlacklist", _test.TestExchangeHandler_AddExchangeToBlacklist},

	{"TestExchangeHandler_RemoveExchangeFromBlacklist", _test.TestExchangeHandler_RemoveExchangeFromBlacklist},

	{"TestExchangeHandler_RefreshExchanges", _test.TestExchangeHandler_RefreshExchanges},

	{"TestExchangeHandler_AddExchange", _test.TestExchangeHandler_AddExchange},

	{"TestExchangeHandler_GetSupportedExchanges", _test.TestExchangeHandler_GetSupportedExchanges},

	{"TestExchangeHandler_AddExchangeToBlacklist_ErrorScenarios", _test.TestExchangeHandler_AddExchangeToBlacklist_ErrorScenarios},

	{"TestExchangeHandler_GetWorkerStatus", _test.TestExchangeHandler_GetWorkerStatus},

	{"TestExchangeHandler_RestartWorker", _test.TestExchangeHandler_RestartWorker},

	{"TestNewHealthHandler", _test.TestNewHealthHandler},

	{"TestHealthHandler_HealthCheck", _test.TestHealthHandler_HealthCheck},

	{"TestHealthHandler_ReadinessCheck", _test.TestHealthHandler_ReadinessCheck},

	{"TestHealthHandler_LivenessCheck", _test.TestHealthHandler_LivenessCheck},

	{"TestCacheIntegrationProblem", _test.TestCacheIntegrationProblem},

	{"TestCacheAnalyticsIntegration", _test.TestCacheAnalyticsIntegration},

	{"TestCacheAnalyticsCategories", _test.TestCacheAnalyticsCategories},

	{"TestMarketHandler_GetTicker", _test.TestMarketHandler_GetTicker},

	{"TestMarketHandler_GetWorkerStatus", _test.TestMarketHandler_GetWorkerStatus},

	{"TestMarketHandler_GetTicker_MissingParams", _test.TestMarketHandler_GetTicker_MissingParams},

	{"TestMarketHandler_GetOrderBook_FetchError", _test.TestMarketHandler_GetOrderBook_FetchError},

	{"TestMarketHandler_GetOrderBook", _test.TestMarketHandler_GetOrderBook},

	{"TestMarketHandler_GetOrderBook_MissingParams", _test.TestMarketHandler_GetOrderBook_MissingParams},

	{"TestMarketHandler_GetOrderBook_ServiceUnavailable", _test.TestMarketHandler_GetOrderBook_ServiceUnavailable},

	{"TestMarketPricesResponse_Struct", _test.TestMarketPricesResponse_Struct},

	{"TestMarketPriceData_Struct", _test.TestMarketPriceData_Struct},

	{"TestTickerResponse_Struct", _test.TestTickerResponse_Struct},

	{"TestNewMarketHandler", _test.TestNewMarketHandler},

	{"TestGetTicker", _test.TestGetTicker},

	{"TestMarketHandler_GetBulkTickers", _test.TestMarketHandler_GetBulkTickers},

	{"TestMarketHandler_GetWorkerStatus_WithCollectorService", _test.TestMarketHandler_GetWorkerStatus_WithCollectorService},

	{"TestMarketHandler_GetMarketPrices", _test.TestMarketHandler_GetMarketPrices},

	{"TestMarketHandler_CacheFunctionality", _test.TestMarketHandler_CacheFunctionality},

	{"TestMarketHandler_StructValidation", _test.TestMarketHandler_StructValidation},

	{"TestConvertOrderBookEntries", _test.TestConvertOrderBookEntries},

	{"TestTelegramWebhookIntegration", _test.TestTelegramWebhookIntegration},

	{"TestTelegramCommandHandling", _test.TestTelegramCommandHandling},

	{"TestTelegramCacheIntegration", _test.TestTelegramCacheIntegration},

	{"TestTelegramErrorHandling", _test.TestTelegramErrorHandling},

	{"TestTelegramConfigValidation", _test.TestTelegramConfigValidation},

	{"TestTelegramHandler_ProcessUpdate", _test.TestTelegramHandler_ProcessUpdate},

	{"TestTelegramHandler_HandleStartCommand", _test.TestTelegramHandler_HandleStartCommand},

	{"TestTelegramHandler_HandleOpportunitiesCommand", _test.TestTelegramHandler_HandleOpportunitiesCommand},

	{"TestTelegramHandler_HandleSettingsCommand", _test.TestTelegramHandler_HandleSettingsCommand},

	{"TestTelegramHandler_HandleHelpCommand", _test.TestTelegramHandler_HandleHelpCommand},

	{"TestTelegramHandler_HandleUpgradeCommand", _test.TestTelegramHandler_HandleUpgradeCommand},

	{"TestTelegramHandler_HandleStatusCommand", _test.TestTelegramHandler_HandleStatusCommand},

	{"TestTelegramHandler_HandleStopCommand", _test.TestTelegramHandler_HandleStopCommand},

	{"TestTelegramHandler_HandleResumeCommand", _test.TestTelegramHandler_HandleResumeCommand},

	{"TestTelegramHandler_HandleTextMessage", _test.TestTelegramHandler_HandleTextMessage},

	{"TestTelegramHandler_SendMessage", _test.TestTelegramHandler_SendMessage},

	{"TestTelegramHandler_StartPolling", _test.TestTelegramHandler_StartPolling},

	{"TestTelegramHandler_StopPolling", _test.TestTelegramHandler_StopPolling},

	{"TestTelegramHandler_CacheAggregatedSignals", _test.TestTelegramHandler_CacheAggregatedSignals},

	{"TestTelegramHandler_GetCachedAggregatedSignals", _test.TestTelegramHandler_GetCachedAggregatedSignals},

	{"TestTelegramHandler_GetCachedTelegramOpportunities", _test.TestTelegramHandler_GetCachedTelegramOpportunities},

	{"TestTelegramHandler_SendAggregatedSignalsMessage", _test.TestTelegramHandler_SendAggregatedSignalsMessage},

	{"TestTelegramWebhookEndpoint", _test.TestTelegramWebhookEndpoint},

	{"TestTelegramCommandProcessing", _test.TestTelegramCommandProcessing},

	{"TestTelegramCacheOperations", _test.TestTelegramCacheOperations},

	{"TestTelegramMessageFormatting", _test.TestTelegramMessageFormatting},

	{"TestTelegramUserManagement", _test.TestTelegramUserManagement},

	{"TestTelegramWebhookErrorHandling", _test.TestTelegramWebhookErrorHandling},

	{"TestTelegramHandlerInitialization", _test.TestTelegramHandlerInitialization},

	{"TestUserAuthFlow_CompleteFlow", _test.TestUserAuthFlow_CompleteFlow},

	{"TestUserAuthFlow_TokenValidation", _test.TestUserAuthFlow_TokenValidation},

	{"TestNewUserHandler", _test.TestNewUserHandler},

	{"TestUserHandler_RegisterUser", _test.TestUserHandler_RegisterUser},

	{"TestUserHandler_LoginUser", _test.TestUserHandler_LoginUser},

	{"TestUserHandler_GetUserProfile", _test.TestUserHandler_GetUserProfile},

	{"TestUserHandler_UpdateUserProfile", _test.TestUserHandler_UpdateUserProfile},

	{"TestRegisterRequest_Struct", _test.TestRegisterRequest_Struct},

	{"TestLoginRequest_Struct", _test.TestLoginRequest_Struct},

	{"TestUserResponse_Struct", _test.TestUserResponse_Struct},

	{"TestLoginResponse_Struct", _test.TestLoginResponse_Struct},

	{"TestUpdateProfileRequest_Struct", _test.TestUpdateProfileRequest_Struct},

	{"TestUserHandler_RegisterUser_InvalidJSON", _test.TestUserHandler_RegisterUser_InvalidJSON},

	{"TestUserHandler_RegisterUser_MissingEmail", _test.TestUserHandler_RegisterUser_MissingEmail},

	{"TestUserHandler_RegisterUser_WithMocks", _test.TestUserHandler_RegisterUser_WithMocks},

	{"TestUserHandler_LoginUser_InvalidJSON", _test.TestUserHandler_LoginUser_InvalidJSON},

	{"TestUserHandler_LoginUser_WithMocks", _test.TestUserHandler_LoginUser_WithMocks},

	{"TestUserHandler_GetUserProfile_MissingUserID", _test.TestUserHandler_GetUserProfile_MissingUserID},

	{"TestUserHandler_UpdateUserProfile_MissingUserID", _test.TestUserHandler_UpdateUserProfile_MissingUserID},

	{"TestUserHandler_UpdateUserProfile_WithMocks", _test.TestUserHandler_UpdateUserProfile_WithMocks},

	{"TestUserHandler_UpdateUserProfile_InvalidJSON", _test.TestUserHandler_UpdateUserProfile_InvalidJSON},

	{"TestUserHandler_UpdateUserProfile_Comprehensive", _test.TestUserHandler_UpdateUserProfile_Comprehensive},

	{"TestUserHandler_userExists", _test.TestUserHandler_userExists},

	{"TestUserHandler_getUserByEmail", _test.TestUserHandler_getUserByEmail},

	{"TestUserHandler_getUserByID", _test.TestUserHandler_getUserByID},

	{"TestUserHandler_GetUserByTelegramChatID", _test.TestUserHandler_GetUserByTelegramChatID},

	{"TestUserHandler_CreateTelegramUser", _test.TestUserHandler_CreateTelegramUser},

	{"TestUserHandler_generateSimpleToken", _test.TestUserHandler_generateSimpleToken},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkTelegramWebhookProcessing", _test.BenchmarkTelegramWebhookProcessing},

	{"BenchmarkTelegramWebhookProcessingPerformance", _test.BenchmarkTelegramWebhookProcessingPerformance},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "github.com/irfandi/celebrum-ai-go/internal/api/handlers"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

