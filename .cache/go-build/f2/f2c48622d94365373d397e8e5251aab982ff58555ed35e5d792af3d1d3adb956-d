
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"reflect"

	"testing"
	"testing/internal/testdeps"



	_test "github.com/irfandi/celebrum-ai-go/internal/services"


)

var tests = []testing.InternalTest{

	{"TestArbitrageService_ConfigParsing", _test.TestArbitrageService_ConfigParsing},

	{"TestArbitrageService_ContextManagement", _test.TestArbitrageService_ContextManagement},

	{"TestArbitrageService_ConcurrentOperations", _test.TestArbitrageService_ConcurrentOperations},

	{"TestArbitrageService_TimeHandling", _test.TestArbitrageService_TimeHandling},

	{"TestArbitrageService_ErrorHandling", _test.TestArbitrageService_ErrorHandling},

	{"TestArbitrageService_StateTransitions", _test.TestArbitrageService_StateTransitions},

	{"TestArbitrageService_MetricsCollection", _test.TestArbitrageService_MetricsCollection},

	{"TestArbitrageService_BatchProcessing", _test.TestArbitrageService_BatchProcessing},

	{"TestNewArbitrageService", _test.TestNewArbitrageService},

	{"TestNewArbitrageService_DefaultValues", _test.TestNewArbitrageService_DefaultValues},

	{"TestArbitrageService_StartStop", _test.TestArbitrageService_StartStop},

	{"TestArbitrageService_StartDisabled", _test.TestArbitrageService_StartDisabled},

	{"TestArbitrageService_Start", _test.TestArbitrageService_Start},

	{"TestArbitrageService_Start_ContextHandling", _test.TestArbitrageService_Start_ContextHandling},

	{"TestArbitrageService_Start_GoroutineLaunch", _test.TestArbitrageService_Start_GoroutineLaunch},

	{"TestArbitrageService_Start_Logging", _test.TestArbitrageService_Start_Logging},

	{"TestArbitrageService_Start_MutexBehavior", _test.TestArbitrageService_Start_MutexBehavior},

	{"TestArbitrageService_GetStatus", _test.TestArbitrageService_GetStatus},

	{"TestArbitrageService_ConcurrentAccess", _test.TestArbitrageService_ConcurrentAccess},

	{"TestArbitrageService_ConfigValidation", _test.TestArbitrageService_ConfigValidation},

	{"TestArbitrageService_calculationLoop", _test.TestArbitrageService_calculationLoop},

	{"TestArbitrageService_calculateAndStoreOpportunities", _test.TestArbitrageService_calculateAndStoreOpportunities},

	{"TestArbitrageService_calculateAndStoreOpportunities_NoMarketData", _test.TestArbitrageService_calculateAndStoreOpportunities_NoMarketData},

	{"TestArbitrageService_calculateAndStoreOpportunities_SuccessPath", _test.TestArbitrageService_calculateAndStoreOpportunities_SuccessPath},

	{"TestArbitrageService_calculateAndStoreOpportunities_CleanupError", _test.TestArbitrageService_calculateAndStoreOpportunities_CleanupError},

	{"TestArbitrageService_calculateAndStoreOpportunities_GetMarketDataError", _test.TestArbitrageService_calculateAndStoreOpportunities_GetMarketDataError},

	{"TestArbitrageService_calculateAndStoreOpportunities_CalculateError", _test.TestArbitrageService_calculateAndStoreOpportunities_CalculateError},

	{"TestArbitrageService_calculateAndStoreOpportunities_StoreError", _test.TestArbitrageService_calculateAndStoreOpportunities_StoreError},

	{"TestArbitrageService_calculateAndStoreOpportunities_NoValidOpportunities", _test.TestArbitrageService_calculateAndStoreOpportunities_NoValidOpportunities},

	{"TestArbitrageService_calculateAndStoreOpportunities_ContextCancellation", _test.TestArbitrageService_calculateAndStoreOpportunities_ContextCancellation},

	{"TestArbitrageService_getLatestMarketData", _test.TestArbitrageService_getLatestMarketData},

	{"TestArbitrageService_getLatestMarketData_Context", _test.TestArbitrageService_getLatestMarketData_Context},

	{"TestArbitrageService_getLatestMarketData_ConfigVariations", _test.TestArbitrageService_getLatestMarketData_ConfigVariations},

	{"TestArbitrageService_getLatestMarketData_ErrorScenarios", _test.TestArbitrageService_getLatestMarketData_ErrorScenarios},

	{"TestArbitrageService_filterOpportunities", _test.TestArbitrageService_filterOpportunities},

	{"TestArbitrageService_storeOpportunities", _test.TestArbitrageService_storeOpportunities},

	{"TestArbitrageService_storeOpportunities_Empty", _test.TestArbitrageService_storeOpportunities_Empty},

	{"TestArbitrageService_storeOpportunityBatch", _test.TestArbitrageService_storeOpportunityBatch},

	{"TestArbitrageService_cleanupOldOpportunities", _test.TestArbitrageService_cleanupOldOpportunities},

	{"TestArbitrageService_countTotalTradingPairs", _test.TestArbitrageService_countTotalTradingPairs},

	{"TestArbitrageService_GetActiveOpportunities", _test.TestArbitrageService_GetActiveOpportunities},

	{"TestArbitrageService_GetActiveOpportunities_WithData", _test.TestArbitrageService_GetActiveOpportunities_WithData},

	{"TestArbitrageService_Stop", _test.TestArbitrageService_Stop},

	{"TestArbitrageService_Stop_Concurrent", _test.TestArbitrageService_Stop_Concurrent},

	{"TestArbitrageService_Stop_ContextCancellation", _test.TestArbitrageService_Stop_ContextCancellation},

	{"TestArbitrageService_Stop_MutexBehavior", _test.TestArbitrageService_Stop_MutexBehavior},

	{"TestArbitrageService_storeOpportunityBatch_Success", _test.TestArbitrageService_storeOpportunityBatch_Success},

	{"TestArbitrageService_storeOpportunityBatch_EmptyBatch", _test.TestArbitrageService_storeOpportunityBatch_EmptyBatch},

	{"TestArbitrageService_storeOpportunityBatch_BeginTransactionError", _test.TestArbitrageService_storeOpportunityBatch_BeginTransactionError},

	{"TestArbitrageService_storeOpportunityBatch_InsertError", _test.TestArbitrageService_storeOpportunityBatch_InsertError},

	{"TestArbitrageService_storeOpportunityBatch_CommitError", _test.TestArbitrageService_storeOpportunityBatch_CommitError},

	{"TestArbitrageService_storeOpportunityBatch_EmptyID", _test.TestArbitrageService_storeOpportunityBatch_EmptyID},

	{"TestCacheAnalyticsService_NewCacheAnalyticsService", _test.TestCacheAnalyticsService_NewCacheAnalyticsService},

	{"TestCacheAnalyticsService_GetMetrics", _test.TestCacheAnalyticsService_GetMetrics},

	{"TestCacheAnalyticsService_GetMetrics_EmptyData", _test.TestCacheAnalyticsService_GetMetrics_EmptyData},

	{"TestCacheAnalyticsService_GetMetrics_WithRedisInfo", _test.TestCacheAnalyticsService_GetMetrics_WithRedisInfo},

	{"TestCacheAnalyticsService_ResetStats", _test.TestCacheAnalyticsService_ResetStats},

	{"TestCacheAnalyticsService_RecordHit", _test.TestCacheAnalyticsService_RecordHit},

	{"TestCacheAnalyticsService_RecordMiss", _test.TestCacheAnalyticsService_RecordMiss},

	{"TestCacheAnalyticsService_GetStats", _test.TestCacheAnalyticsService_GetStats},

	{"TestCacheAnalyticsService_GetAllStats", _test.TestCacheAnalyticsService_GetAllStats},

	{"TestCacheAnalyticsService_parseRedisInfo", _test.TestCacheAnalyticsService_parseRedisInfo},

	{"TestCacheAnalyticsService_StartPeriodicReporting", _test.TestCacheAnalyticsService_StartPeriodicReporting},

	{"TestCacheWarmingService_NewCacheWarmingService", _test.TestCacheWarmingService_NewCacheWarmingService},

	{"TestCacheWarmingService_WarmCache", _test.TestCacheWarmingService_WarmCache},

	{"TestCacheWarmingService_warmExchangeConfig", _test.TestCacheWarmingService_warmExchangeConfig},

	{"TestCacheWarmingService_warmSupportedExchanges", _test.TestCacheWarmingService_warmSupportedExchanges},

	{"TestCacheWarmingService_warmTradingPairs", _test.TestCacheWarmingService_warmTradingPairs},

	{"TestCacheWarmingService_warmExchanges", _test.TestCacheWarmingService_warmExchanges},

	{"TestCacheWarmingService_warmFundingRates", _test.TestCacheWarmingService_warmFundingRates},

	{"TestCacheWarmingService_warmFundingRates_Success", _test.TestCacheWarmingService_warmFundingRates_Success},

	{"TestCacheWarmingService_warmFundingRates_DatabaseError", _test.TestCacheWarmingService_warmFundingRates_DatabaseError},

	{"TestCacheWarmingService_warmFundingRates_EmptyResults", _test.TestCacheWarmingService_warmFundingRates_EmptyResults},

	{"TestCacheWarmingService_warmFundingRates_ScanError", _test.TestCacheWarmingService_warmFundingRates_ScanError},

	{"TestCacheWarmingService_warmFundingRates_RedisError", _test.TestCacheWarmingService_warmFundingRates_RedisError},

	{"TestCacheWarmingService_warmFundingRates_FullSuccess", _test.TestCacheWarmingService_warmFundingRates_FullSuccess},

	{"TestCacheWarmingService_warmFundingRates_MultipleExchanges", _test.TestCacheWarmingService_warmFundingRates_MultipleExchanges},

	{"TestCacheWarmingService_warmFundingRates_TimePrecision", _test.TestCacheWarmingService_warmFundingRates_TimePrecision},

	{"TestCacheWarmingService_errorHandling", _test.TestCacheWarmingService_errorHandling},

	{"TestCircuitBreaker_Basic", _test.TestCircuitBreaker_Basic},

	{"TestCircuitBreaker_Execute", _test.TestCircuitBreaker_Execute},

	{"TestCircuitBreaker_ExecuteWithError", _test.TestCircuitBreaker_ExecuteWithError},

	{"TestCircuitBreaker_GetState", _test.TestCircuitBreaker_GetState},

	{"TestCircuitBreaker_GetStats", _test.TestCircuitBreaker_GetStats},

	{"TestCircuitBreaker_IsOpen", _test.TestCircuitBreaker_IsOpen},

	{"TestCircuitBreaker_Reset", _test.TestCircuitBreaker_Reset},

	{"TestCircuitBreaker_ConcurrentAccess", _test.TestCircuitBreaker_ConcurrentAccess},

	{"TestCircuitBreaker_ConfigDefaults", _test.TestCircuitBreaker_ConfigDefaults},

	{"TestCircuitBreaker_ContextCancellation", _test.TestCircuitBreaker_ContextCancellation},

	{"TestCircuitBreaker_StateManagement", _test.TestCircuitBreaker_StateManagement},

	{"TestCircuitBreaker_ErrorScenarios", _test.TestCircuitBreaker_ErrorScenarios},

	{"TestCircuitBreakerManager_GetAllStats_Empty", _test.TestCircuitBreakerManager_GetAllStats_Empty},

	{"TestCircuitBreakerManager_GetAllStats_WithBreakers", _test.TestCircuitBreakerManager_GetAllStats_WithBreakers},

	{"TestCircuitBreakerManager_GetAllStats_ConcurrentAccess", _test.TestCircuitBreakerManager_GetAllStats_ConcurrentAccess},

	{"TestCircuitBreakerManager_ResetAll_Empty", _test.TestCircuitBreakerManager_ResetAll_Empty},

	{"TestCircuitBreakerManager_ResetAll_WithBreakers", _test.TestCircuitBreakerManager_ResetAll_WithBreakers},

	{"TestCircuitBreakerManager_ResetAll_ConcurrentAccess", _test.TestCircuitBreakerManager_ResetAll_ConcurrentAccess},

	{"TestCircuitBreakerManager_GetAllStats_AfterReset", _test.TestCircuitBreakerManager_GetAllStats_AfterReset},

	{"TestNewCleanupService", _test.TestNewCleanupService},

	{"TestCleanupService_Start", _test.TestCleanupService_Start},

	{"TestCleanupService_RunCleanup", _test.TestCleanupService_RunCleanup},

	{"TestCleanupService_GetDataStats", _test.TestCleanupService_GetDataStats},

	{"TestCleanupService_GetDataStats_WithError", _test.TestCleanupService_GetDataStats_WithError},

	{"TestCleanupService_CleanupMarketDataSmart", _test.TestCleanupService_CleanupMarketDataSmart},

	{"TestCleanupService_CleanupFundingRatesSmart", _test.TestCleanupService_CleanupFundingRatesSmart},

	{"TestCleanupService_CleanupArbitrageOpportunities", _test.TestCleanupService_CleanupArbitrageOpportunities},

	{"TestCleanupService_CleanupFundingArbitrageOpportunities", _test.TestCleanupService_CleanupFundingArbitrageOpportunities},

	{"TestCleanupService_CleanupMarketData", _test.TestCleanupService_CleanupMarketData},

	{"TestCleanupService_CleanupFundingRates", _test.TestCleanupService_CleanupFundingRates},

	{"TestCleanupService_CleanupMarketData_WithRealDatabase", _test.TestCleanupService_CleanupMarketData_WithRealDatabase},

	{"TestCleanupService_CleanupFundingRates_WithRealDatabase", _test.TestCleanupService_CleanupFundingRates_WithRealDatabase},

	{"TestCleanupService_CleanupMarketData_ContextCancellation", _test.TestCleanupService_CleanupMarketData_ContextCancellation},

	{"TestCleanupService_CleanupFundingRates_ContextCancellation", _test.TestCleanupService_CleanupFundingRates_ContextCancellation},

	{"TestCleanupService_CleanupMarketData_NegativeRetention", _test.TestCleanupService_CleanupMarketData_NegativeRetention},

	{"TestCleanupService_CleanupFundingRates_ZeroRetention", _test.TestCleanupService_CleanupFundingRates_ZeroRetention},

	{"TestCleanupService_CleanupMarketDataSmart_WithError", _test.TestCleanupService_CleanupMarketDataSmart_WithError},

	{"TestCleanupService_Stop", _test.TestCleanupService_Stop},

	{"TestCleanupService_ContextCancellation", _test.TestCleanupService_ContextCancellation},

	{"TestNewCollectorService", _test.TestNewCollectorService},

	{"TestCollectorService_Start", _test.TestCollectorService_Start},

	{"TestCollectorService_Stop", _test.TestCollectorService_Stop},

	{"TestCollectorService_GetWorkerStatus", _test.TestCollectorService_GetWorkerStatus},

	{"TestCollectorService_IsHealthy", _test.TestCollectorService_IsHealthy},

	{"TestCollectorService_RestartWorker", _test.TestCollectorService_RestartWorker},

	{"TestWorker_Struct", _test.TestWorker_Struct},

	{"TestCollectorConfig_Struct", _test.TestCollectorConfig_Struct},

	{"TestCollectorService_ValidateMarketData", _test.TestCollectorService_ValidateMarketData},

	{"TestCollectorService_ParseSymbol", _test.TestCollectorService_ParseSymbol},

	{"TestCollectorService_IsOptionsContract", _test.TestCollectorService_IsOptionsContract},

	{"TestCollectorService_IsInvalidSymbolFormat", _test.TestCollectorService_IsInvalidSymbolFormat},

	{"TestCollectorService_CacheBulkTickerData", _test.TestCollectorService_CacheBulkTickerData},

	{"TestCollectorService_CacheBulkTickerData_WithRedis", _test.TestCollectorService_CacheBulkTickerData_WithRedis},

	{"TestCollectorService_SaveBulkTickerData", _test.TestCollectorService_SaveBulkTickerData},

	{"TestCollectorService_SaveBulkTickerData_NilDatabase", _test.TestCollectorService_SaveBulkTickerData_NilDatabase},

	{"TestCollectorService_SaveBulkTickerData_InvalidData", _test.TestCollectorService_SaveBulkTickerData_InvalidData},

	{"TestCollectorService_CollectTickerDataDirect", _test.TestCollectorService_CollectTickerDataDirect},

	{"TestCollectorService_CollectTickerDataDirect_WithMockCCXT", _test.TestCollectorService_CollectTickerDataDirect_WithMockCCXT},

	{"TestCollectorService_CollectTickerDataDirect_CCXErrorWithBlacklist", _test.TestCollectorService_CollectTickerDataDirect_CCXErrorWithBlacklist},

	{"TestCollectorService_CollectFundingRates", _test.TestCollectorService_CollectFundingRates},

	{"TestCollectorService_CollectFundingRatesBulk", _test.TestCollectorService_CollectFundingRatesBulk},

	{"TestCollectorService_StoreFundingRate", _test.TestCollectorService_StoreFundingRate},

	{"TestCollectorService_CollectFundingRatesBulk_CapabilityCaching", _test.TestCollectorService_CollectFundingRatesBulk_CapabilityCaching},

	{"TestCollectorService_CollectFundingRatesBulk_CCXTErrors", _test.TestCollectorService_CollectFundingRatesBulk_CCXTErrors},

	{"TestCollectorService_CollectFundingRatesBulk_Concurrent", _test.TestCollectorService_CollectFundingRatesBulk_Concurrent},

	{"TestSymbolCache_Get", _test.TestSymbolCache_Get},

	{"TestSymbolCache_Set", _test.TestSymbolCache_Set},

	{"TestSymbolCache_GetStats", _test.TestSymbolCache_GetStats},

	{"TestSymbolCache_ConcurrentOperations", _test.TestSymbolCache_ConcurrentOperations},

	{"TestSymbolCache_EdgeCases", _test.TestSymbolCache_EdgeCases},

	{"TestSymbolCache_LogStats", _test.TestSymbolCache_LogStats},

	{"TestCollectorService_ConvertMarketPriceInterfacesToModels", _test.TestCollectorService_ConvertMarketPriceInterfacesToModels},

	{"TestCollectorService_ConvertMarketPriceInterfaceToModel", _test.TestCollectorService_ConvertMarketPriceInterfaceToModel},

	{"TestCollectorService_ConvertMarketPriceInterfaceToModel_FunctionalInterface", _test.TestCollectorService_ConvertMarketPriceInterfaceToModel_FunctionalInterface},

	{"TestEnhancedArbitrageSignalFormatting", _test.TestEnhancedArbitrageSignalFormatting},

	{"TestArbitragePriceRangeCalculation", _test.TestArbitragePriceRangeCalculation},

	{"TestErrorRecoveryManager_NewErrorRecoveryManager", _test.TestErrorRecoveryManager_NewErrorRecoveryManager},

	{"TestErrorRecoveryManager_RegisterCircuitBreaker", _test.TestErrorRecoveryManager_RegisterCircuitBreaker},

	{"TestErrorRecoveryManager_RegisterRetryPolicy", _test.TestErrorRecoveryManager_RegisterRetryPolicy},

	{"TestErrorRecoveryManager_ExecuteWithRecovery_Success", _test.TestErrorRecoveryManager_ExecuteWithRecovery_Success},

	{"TestErrorRecoveryManager_ExecuteWithRecovery_Failure", _test.TestErrorRecoveryManager_ExecuteWithRecovery_Failure},

	{"TestErrorRecoveryManager_ExecuteWithRecovery_Fallback", _test.TestErrorRecoveryManager_ExecuteWithRecovery_Fallback},

	{"TestErrorRecoveryManager_ExecuteWithRetry", _test.TestErrorRecoveryManager_ExecuteWithRetry},

	{"TestErrorRecoveryManager_ExecuteWithRetry_ContextCancellation", _test.TestErrorRecoveryManager_ExecuteWithRetry_ContextCancellation},

	{"TestErrorRecoveryManager_CalculateDelay", _test.TestErrorRecoveryManager_CalculateDelay},

	{"TestErrorRecoveryManager_DegradationMode", _test.TestErrorRecoveryManager_DegradationMode},

	{"TestErrorRecoveryManager_GetCircuitBreakerStatus", _test.TestErrorRecoveryManager_GetCircuitBreakerStatus},

	{"TestErrorRecoveryManager_ExecuteWithRetry_ErrorOnly", _test.TestErrorRecoveryManager_ExecuteWithRetry_ErrorOnly},

	{"TestErrorRecoveryManager_ExecuteWithRetry_ErrorOnly_WithRetries", _test.TestErrorRecoveryManager_ExecuteWithRetry_ErrorOnly_WithRetries},

	{"TestErrorRecoveryManager_DefaultRetryPolicies", _test.TestErrorRecoveryManager_DefaultRetryPolicies},

	{"TestErrorRecoveryManager_ConcurrentOperations", _test.TestErrorRecoveryManager_ConcurrentOperations},

	{"TestErrorRecoveryManager_TimeHandling", _test.TestErrorRecoveryManager_TimeHandling},

	{"TestErrorRecoveryManager_StateManagement", _test.TestErrorRecoveryManager_StateManagement},

	{"TestFuturesArbitrageCalculator_calculateLiquidityScore", _test.TestFuturesArbitrageCalculator_calculateLiquidityScore},

	{"TestFuturesArbitrageCalculator_calculateNextFundingTime", _test.TestFuturesArbitrageCalculator_calculateNextFundingTime},

	{"TestFuturesArbitrageCalculator_calculatePriceCorrelation", _test.TestFuturesArbitrageCalculator_calculatePriceCorrelation},

	{"TestFuturesArbitrageCalculator_calculatePearsonCorrelation", _test.TestFuturesArbitrageCalculator_calculatePearsonCorrelation},

	{"TestFuturesArbitrageCalculator_CalculateFuturesArbitrage", _test.TestFuturesArbitrageCalculator_CalculateFuturesArbitrage},

	{"TestFuturesArbitrageCalculator_CalculatePositionSizing", _test.TestFuturesArbitrageCalculator_CalculatePositionSizing},

	{"TestFuturesArbitrageCalculator_CalculateRiskScore", _test.TestFuturesArbitrageCalculator_CalculateRiskScore},

	{"TestFuturesArbitrageCalculator_CalculateRiskMetrics", _test.TestFuturesArbitrageCalculator_CalculateRiskMetrics},

	{"TestFuturesArbitrageCalculator_CalculateAPY", _test.TestFuturesArbitrageCalculator_CalculateAPY},

	{"TestFuturesArbitrageCalculator_calculatePeriodProfit", _test.TestFuturesArbitrageCalculator_calculatePeriodProfit},

	{"TestNewFuturesArbitrageCalculator", _test.TestNewFuturesArbitrageCalculator},

	{"TestCalculateFuturesArbitrage", _test.TestCalculateFuturesArbitrage},

	{"TestCalculateRiskScore", _test.TestCalculateRiskScore},

	{"TestCalculatePositionSizing", _test.TestCalculatePositionSizing},

	{"TestCalculateRiskMetrics", _test.TestCalculateRiskMetrics},

	{"TestCalculateAPY", _test.TestCalculateAPY},

	{"TestCalculateEstimatedProfits", _test.TestCalculateEstimatedProfits},

	{"TestFuturesArbitrageService_New", _test.TestFuturesArbitrageService_New},

	{"TestFuturesArbitrageService_StartStop", _test.TestFuturesArbitrageService_StartStop},

	{"TestFuturesArbitrageService_IsRunning", _test.TestFuturesArbitrageService_IsRunning},

	{"TestFundingRateData_Struct", _test.TestFundingRateData_Struct},

	{"TestFuturesArbitrageService_getLatestFundingRates_CacheHit", _test.TestFuturesArbitrageService_getLatestFundingRates_CacheHit},

	{"TestFuturesArbitrageService_getLatestFundingRates_CacheMiss", _test.TestFuturesArbitrageService_getLatestFundingRates_CacheMiss},

	{"TestFuturesArbitrageService_calculateAndStoreOpportunities_NoFundingRates", _test.TestFuturesArbitrageService_calculateAndStoreOpportunities_NoFundingRates},

	{"TestFuturesArbitrageService_storeOpportunity", _test.TestFuturesArbitrageService_storeOpportunity},

	{"TestFuturesArbitrageService_cleanupExpiredOpportunities", _test.TestFuturesArbitrageService_cleanupExpiredOpportunities},

	{"TestFuturesArbitrageService_Start", _test.TestFuturesArbitrageService_Start},

	{"TestFuturesArbitrageService_Stop", _test.TestFuturesArbitrageService_Stop},

	{"TestFuturesArbitrageService_calculateAndStoreOpportunities_Success", _test.TestFuturesArbitrageService_calculateAndStoreOpportunities_Success},

	{"TestFuturesArbitrageService_calculateAndStoreOpportunities_NoRates", _test.TestFuturesArbitrageService_calculateAndStoreOpportunities_NoRates},

	{"TestFuturesArbitrageService_calculateAndStoreOpportunities_EmptyRates", _test.TestFuturesArbitrageService_calculateAndStoreOpportunities_EmptyRates},

	{"TestFuturesArbitrageService_calculateAndStoreOpportunities_CleanupError", _test.TestFuturesArbitrageService_calculateAndStoreOpportunities_CleanupError},

	{"TestFuturesArbitrageService_calculateAndStoreOpportunities_ContextCancellation", _test.TestFuturesArbitrageService_calculateAndStoreOpportunities_ContextCancellation},

	{"TestNewNotificationService", _test.TestNewNotificationService},

	{"TestArbitrageOpportunity_Struct", _test.TestArbitrageOpportunity_Struct},

	{"TestNotificationService_formatArbitrageMessage", _test.TestNotificationService_formatArbitrageMessage},

	{"TestNotificationService_OpportunityCategorization", _test.TestNotificationService_OpportunityCategorization},

	{"TestArbitrageOpportunity_EdgeCases", _test.TestArbitrageOpportunity_EdgeCases},

	{"TestNotificationService_formatArbitrageMessage_EdgeCases", _test.TestNotificationService_formatArbitrageMessage_EdgeCases},

	{"TestNotificationService_StructFields", _test.TestNotificationService_StructFields},

	{"TestArbitrageOpportunity_JSONStructure", _test.TestArbitrageOpportunity_JSONStructure},

	{"TestNotificationService_formatArbitrageMessage_ExactlyThree", _test.TestNotificationService_formatArbitrageMessage_ExactlyThree},

	{"TestNotificationService_formatArbitrageMessage_MoreThanThree", _test.TestNotificationService_formatArbitrageMessage_MoreThanThree},

	{"TestNotificationService_PublishOpportunityUpdate", _test.TestNotificationService_PublishOpportunityUpdate},

	{"TestNotificationService_GetCacheStats", _test.TestNotificationService_GetCacheStats},

	{"TestNotificationService_cacheArbitrageOpportunities", _test.TestNotificationService_cacheArbitrageOpportunities},

	{"TestNotificationService_CacheMarketData", _test.TestNotificationService_CacheMarketData},

	{"TestNotificationService_GetCachedMarketData", _test.TestNotificationService_GetCachedMarketData},

	{"TestNotificationService_InvalidateUserCache", _test.TestNotificationService_InvalidateUserCache},

	{"TestNotificationService_InvalidateOpportunityCache", _test.TestNotificationService_InvalidateOpportunityCache},

	{"TestNotificationService_formatTechnicalSignalMessage", _test.TestNotificationService_formatTechnicalSignalMessage},

	{"TestNotificationService_ConvertAggregatedSignalToNotification", _test.TestNotificationService_ConvertAggregatedSignalToNotification},

	{"TestNotificationService_generateOpportunityHash", _test.TestNotificationService_generateOpportunityHash},

	{"TestNotificationService_generateTechnicalSignalsHash", _test.TestNotificationService_generateTechnicalSignalsHash},

	{"TestNotificationService_getCachedMessage", _test.TestNotificationService_getCachedMessage},

	{"TestNotificationService_setCachedMessage", _test.TestNotificationService_setCachedMessage},

	{"TestNotificationService_checkRateLimit", _test.TestNotificationService_checkRateLimit},

	{"TestNotificationService_logNotification", _test.TestNotificationService_logNotification},

	{"TestNotificationService_CheckUserNotificationPreferences", _test.TestNotificationService_CheckUserNotificationPreferences},

	{"TestNotificationService_generateAggregatedSignalsHash", _test.TestNotificationService_generateAggregatedSignalsHash},

	{"TestNotificationService_formatEnhancedArbitrageMessage", _test.TestNotificationService_formatEnhancedArbitrageMessage},

	{"TestNotificationService_formatAggregatedArbitrageMessage", _test.TestNotificationService_formatAggregatedArbitrageMessage},

	{"TestNotificationService_formatAggregatedTechnicalMessage", _test.TestNotificationService_formatAggregatedTechnicalMessage},

	{"TestNewPerformanceMonitor", _test.TestNewPerformanceMonitor},

	{"TestPerformanceMonitor_Start", _test.TestPerformanceMonitor_Start},

	{"TestPerformanceMonitor_Stop", _test.TestPerformanceMonitor_Stop},

	{"TestPerformanceMonitor_GetSystemMetrics", _test.TestPerformanceMonitor_GetSystemMetrics},

	{"TestPerformanceMonitor_GetApplicationMetrics", _test.TestPerformanceMonitor_GetApplicationMetrics},

	{"TestPerformanceMonitor_UpdateCollectorMetrics", _test.TestPerformanceMonitor_UpdateCollectorMetrics},

	{"TestPerformanceMonitor_UpdateAPIMetrics", _test.TestPerformanceMonitor_UpdateAPIMetrics},

	{"TestPerformanceMonitor_UpdateTelegramMetrics", _test.TestPerformanceMonitor_UpdateTelegramMetrics},

	{"TestPerformanceMonitor_RecordWorkerHealth", _test.TestPerformanceMonitor_RecordWorkerHealth},

	{"TestPerformanceMonitor_GetPerformanceReport", _test.TestPerformanceMonitor_GetPerformanceReport},

	{"TestPerformanceMonitor_CalculateHealthScore", _test.TestPerformanceMonitor_CalculateHealthScore},

	{"TestPerformanceMonitor_ConcurrentAccess", _test.TestPerformanceMonitor_ConcurrentAccess},

	{"TestPerformanceMonitor_CacheMetrics", _test.TestPerformanceMonitor_CacheMetrics},

	{"TestPerformanceMonitor_CollectSystemMetrics", _test.TestPerformanceMonitor_CollectSystemMetrics},

	{"TestPerformanceMonitor_CollectRedisMetrics", _test.TestPerformanceMonitor_CollectRedisMetrics},

	{"TestPerformanceMonitor_WithNilRedis", _test.TestPerformanceMonitor_WithNilRedis},

	{"TestNewResourceManager", _test.TestNewResourceManager},

	{"TestResourceManager_RegisterResource", _test.TestResourceManager_RegisterResource},

	{"TestResourceManager_UpdateResourceUsage", _test.TestResourceManager_UpdateResourceUsage},

	{"TestResourceManager_CleanupResource", _test.TestResourceManager_CleanupResource},

	{"TestResourceManager_CleanupResourceWithError", _test.TestResourceManager_CleanupResourceWithError},

	{"TestResourceManager_CleanupResource_NonExistent", _test.TestResourceManager_CleanupResource_NonExistent},

	{"TestResourceManager_CleanupIdleResources", _test.TestResourceManager_CleanupIdleResources},

	{"TestResourceManager_DetectLeaks", _test.TestResourceManager_DetectLeaks},

	{"TestResourceManager_GetResourceStats", _test.TestResourceManager_GetResourceStats},

	{"TestResourceManager_GetSystemStats", _test.TestResourceManager_GetSystemStats},

	{"TestResourceManager_CleanupAll", _test.TestResourceManager_CleanupAll},

	{"TestResourceManager_Shutdown", _test.TestResourceManager_Shutdown},

	{"TestResourceManager_SetConfiguration", _test.TestResourceManager_SetConfiguration},

	{"TestResourceManager_GetResourceCount", _test.TestResourceManager_GetResourceCount},

	{"TestResourceManager_IsResourceManaged", _test.TestResourceManager_IsResourceManaged},

	{"TestResourceManager_ConcurrentAccess", _test.TestResourceManager_ConcurrentAccess},

	{"TestResourceManager_ResourceLimits", _test.TestResourceManager_ResourceLimits},

	{"TestResourceManager_MetadataHandling", _test.TestResourceManager_MetadataHandling},

	{"TestResourceManager_ResourceAging", _test.TestResourceManager_ResourceAging},

	{"TestNewResourceOptimizer", _test.TestNewResourceOptimizer},

	{"TestNewResourceOptimizer_WithDefaults", _test.TestNewResourceOptimizer_WithDefaults},

	{"TestResourceOptimizer_calculateOptimalConcurrency", _test.TestResourceOptimizer_calculateOptimalConcurrency},

	{"TestResourceOptimizer_calculateOptimalConcurrency_HighLoad", _test.TestResourceOptimizer_calculateOptimalConcurrency_HighLoad},

	{"TestResourceOptimizer_calculateOptimalConcurrency_LowMemory", _test.TestResourceOptimizer_calculateOptimalConcurrency_LowMemory},

	{"TestResourceOptimizer_GetOptimalConcurrency", _test.TestResourceOptimizer_GetOptimalConcurrency},

	{"TestResourceOptimizer_UpdateSystemMetrics", _test.TestResourceOptimizer_UpdateSystemMetrics},

	{"TestResourceOptimizer_UpdateSystemMetrics_WithMockData", _test.TestResourceOptimizer_UpdateSystemMetrics_WithMockData},

	{"TestResourceOptimizer_RecordPerformanceSnapshot", _test.TestResourceOptimizer_RecordPerformanceSnapshot},

	{"TestResourceOptimizer_OptimizeIfNeeded_RegularInterval", _test.TestResourceOptimizer_OptimizeIfNeeded_RegularInterval},

	{"TestResourceOptimizer_OptimizeIfNeeded_AdaptiveMode", _test.TestResourceOptimizer_OptimizeIfNeeded_AdaptiveMode},

	{"TestResourceOptimizer_shouldOptimize", _test.TestResourceOptimizer_shouldOptimize},

	{"TestResourceOptimizer_GetPerformanceHistory", _test.TestResourceOptimizer_GetPerformanceHistory},

	{"TestResourceOptimizer_GetSystemInfo", _test.TestResourceOptimizer_GetSystemInfo},

	{"TestResourceOptimizer_ConcurrentAccess", _test.TestResourceOptimizer_ConcurrentAccess},

	{"TestResourceOptimizer_min", _test.TestResourceOptimizer_min},

	{"TestResourceOptimizer_Configuration", _test.TestResourceOptimizer_Configuration},

	{"TestResourceOptimizer_PerformanceSnapshot_Timestamp", _test.TestResourceOptimizer_PerformanceSnapshot_Timestamp},

	{"TestResourceOptimizer_OptimizationTiming", _test.TestResourceOptimizer_OptimizationTiming},

	{"TestSignalAggregationIntegration", _test.TestSignalAggregationIntegration},

	{"TestSignalAggregator_Interface", _test.TestSignalAggregator_Interface},

	{"TestSignalAggregator_QualityAssessment", _test.TestSignalAggregator_QualityAssessment},

	{"TestSignalAggregator_BasicFunctionality", _test.TestSignalAggregator_BasicFunctionality},

	{"TestSignalAggregator_SignalStrengthCalculation", _test.TestSignalAggregator_SignalStrengthCalculation},

	{"TestSignalAggregator_PriceRangeCalculation", _test.TestSignalAggregator_PriceRangeCalculation},

	{"TestSignalAggregator_ErrorScenarios", _test.TestSignalAggregator_ErrorScenarios},

	{"TestSignalAggregator_ConcurrentSafety", _test.TestSignalAggregator_ConcurrentSafety},

	{"TestSignalAggregator_NewSignalAggregator", _test.TestSignalAggregator_NewSignalAggregator},

	{"TestSignalAggregator_AggregateArbitrageSignals_Basic", _test.TestSignalAggregator_AggregateArbitrageSignals_Basic},

	{"TestSignalAggregator_AggregateArbitrageSignals_EmptyInput", _test.TestSignalAggregator_AggregateArbitrageSignals_EmptyInput},

	{"TestSignalAggregator_AggregateArbitrageSignals_LowProfit", _test.TestSignalAggregator_AggregateArbitrageSignals_LowProfit},

	{"TestSignalAggregator_AggregateArbitrageSignals_QualityFilter", _test.TestSignalAggregator_AggregateArbitrageSignals_QualityFilter},

	{"TestSignalAggregator_AggregateArbitrageSignals_MultipleOpportunities", _test.TestSignalAggregator_AggregateArbitrageSignals_MultipleOpportunities},

	{"TestSignalProcessor_GetRecentMarketDataFromDB_Success", _test.TestSignalProcessor_GetRecentMarketDataFromDB_Success},

	{"TestSignalProcessor_GetRecentMarketDataFromDB_MissingVolume24hColumn", _test.TestSignalProcessor_GetRecentMarketDataFromDB_MissingVolume24hColumn},

	{"TestSignalProcessor_GetRecentMarketDataFromDB_QueryError", _test.TestSignalProcessor_GetRecentMarketDataFromDB_QueryError},

	{"TestSignalProcessor_GetRecentMarketDataFromDB_EmptyResult", _test.TestSignalProcessor_GetRecentMarketDataFromDB_EmptyResult},

	{"TestSignalProcessor_GetRecentMarketDataFromDB_ScanError", _test.TestSignalProcessor_GetRecentMarketDataFromDB_ScanError},

	{"TestSignalProcessor_GetTradingPairSymbol_Success", _test.TestSignalProcessor_GetTradingPairSymbol_Success},

	{"TestSignalProcessor_GetTradingPairSymbol_NotFound", _test.TestSignalProcessor_GetTradingPairSymbol_NotFound},

	{"TestSignalProcessor_GetTradingPairSymbol_DBError", _test.TestSignalProcessor_GetTradingPairSymbol_DBError},

	{"TestSignalProcessor_Config", _test.TestSignalProcessor_Config},

	{"TestSignalProcessor_ProcessingMetrics", _test.TestSignalProcessor_ProcessingMetrics},

	{"TestSignalProcessor_CircuitBreakerStates", _test.TestSignalProcessor_CircuitBreakerStates},

	{"TestSignalProcessor_SignalStrengthMapping", _test.TestSignalProcessor_SignalStrengthMapping},

	{"TestSignalProcessor_SignalTypeMapping", _test.TestSignalProcessor_SignalTypeMapping},

	{"TestSignalProcessor_ContextHandling", _test.TestSignalProcessor_ContextHandling},

	{"TestSignalProcessor_TimeHandling", _test.TestSignalProcessor_TimeHandling},

	{"TestSignalProcessor_ValidationMethods", _test.TestSignalProcessor_ValidationMethods},

	{"TestSignalProcessor_LoggerInterface", _test.TestSignalProcessor_LoggerInterface},

	{"TestSignalProcessor_ErrorScenarios", _test.TestSignalProcessor_ErrorScenarios},

	{"TestSignalProcessor_ConcurrentSafety", _test.TestSignalProcessor_ConcurrentSafety},

	{"TestNewSignalQualityScorer", _test.TestNewSignalQualityScorer},

	{"TestGetDefaultQualityThresholds", _test.TestGetDefaultQualityThresholds},

	{"TestAssessSignalQuality", _test.TestAssessSignalQuality},

	{"TestIsSignalQualityAcceptable", _test.TestIsSignalQualityAcceptable},

	{"TestCalculateExchangeScore", _test.TestCalculateExchangeScore},

	{"TestCalculateVolumeScore", _test.TestCalculateVolumeScore},

	{"TestCalculateLiquidityScore", _test.TestCalculateLiquidityScore},

	{"TestCalculateVolatilityScore", _test.TestCalculateVolatilityScore},

	{"TestCalculateTimingScore", _test.TestCalculateTimingScore},

	{"TestSignalQualityCalculateRiskScore", _test.TestSignalQualityCalculateRiskScore},

	{"TestCalculateDataFreshnessScore", _test.TestCalculateDataFreshnessScore},

	{"TestCalculateMarketConditionScore", _test.TestCalculateMarketConditionScore},

	{"TestAssessOrderBookDepth", _test.TestAssessOrderBookDepth},

	{"TestAssessSpread", _test.TestAssessSpread},

	{"TestExchangeReliabilityCache", _test.TestExchangeReliabilityCache},

	{"TestCalculateExchangeReliability", _test.TestCalculateExchangeReliability},

	{"TestNewTechnicalAnalysisService", _test.TestNewTechnicalAnalysisService},

	{"TestGetDefaultIndicatorConfig", _test.TestGetDefaultIndicatorConfig},

	{"TestCalculateSMA", _test.TestCalculateSMA},

	{"TestCalculateEMA", _test.TestCalculateEMA},

	{"TestCalculateRSI", _test.TestCalculateRSI},

	{"TestCalculateMACD", _test.TestCalculateMACD},

	{"TestCalculateBollingerBands", _test.TestCalculateBollingerBands},

	{"TestCalculateATR", _test.TestCalculateATR},

	{"TestCalculateStochastic", _test.TestCalculateStochastic},

	{"TestCalculateOBV", _test.TestCalculateOBV},

	{"TestAnalyzeSMASignal", _test.TestAnalyzeSMASignal},

	{"TestAnalyzeRSISignal", _test.TestAnalyzeRSISignal},

	{"TestAnalyzeMACDSignal", _test.TestAnalyzeMACDSignal},

	{"TestDetermineOverallSignal", _test.TestDetermineOverallSignal},

	{"TestConvertToSnapshots", _test.TestConvertToSnapshots},

	{"TestCalculateAllIndicators", _test.TestCalculateAllIndicators},

	{"TestCalculateIndicatorsWithInsufficientData", _test.TestCalculateIndicatorsWithInsufficientData},

	{"TestAnalyzeSignalsWithEmptyData", _test.TestAnalyzeSignalsWithEmptyData},

	{"TestTimeoutManager_NewTimeoutManager", _test.TestTimeoutManager_NewTimeoutManager},

	{"TestTimeoutManager_DefaultTimeoutConfig", _test.TestTimeoutManager_DefaultTimeoutConfig},

	{"TestTimeoutManager_CreateOperationContext", _test.TestTimeoutManager_CreateOperationContext},

	{"TestTimeoutManager_CreateOperationContextWithParent", _test.TestTimeoutManager_CreateOperationContextWithParent},

	{"TestTimeoutManager_CreateOperationContextWithCustomTimeout", _test.TestTimeoutManager_CreateOperationContextWithCustomTimeout},

	{"TestTimeoutManager_CompleteOperation", _test.TestTimeoutManager_CompleteOperation},

	{"TestTimeoutManager_CancelOperation", _test.TestTimeoutManager_CancelOperation},

	{"TestTimeoutManager_CancelAllOperations", _test.TestTimeoutManager_CancelAllOperations},

	{"TestTimeoutManager_GetActiveOperationCount", _test.TestTimeoutManager_GetActiveOperationCount},

	{"TestTimeoutManager_GetActiveOperations", _test.TestTimeoutManager_GetActiveOperations},

	{"TestTimeoutManager_ExecuteWithTimeout", _test.TestTimeoutManager_ExecuteWithTimeout},

	{"TestTimeoutManager_ExecuteWithTimeoutAndFallback", _test.TestTimeoutManager_ExecuteWithTimeoutAndFallback},

	{"TestTimeoutManager_MonitorOperationHealth", _test.TestTimeoutManager_MonitorOperationHealth},

	{"TestTimeoutManager_UpdateTimeoutConfig", _test.TestTimeoutManager_UpdateTimeoutConfig},

	{"TestTimeoutManager_IsOperationActive", _test.TestTimeoutManager_IsOperationActive},

	{"TestTimeoutManager_GetOperationStats", _test.TestTimeoutManager_GetOperationStats},

	{"TestTimeoutManager_Shutdown", _test.TestTimeoutManager_Shutdown},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkCollectorService_ConcurrentSymbolFetching", _test.BenchmarkCollectorService_ConcurrentSymbolFetching},

	{"BenchmarkCollectorService_BulkTickerCollection", _test.BenchmarkCollectorService_BulkTickerCollection},

	{"BenchmarkCollectorService_ConcurrentBackfill", _test.BenchmarkCollectorService_ConcurrentBackfill},

	{"BenchmarkCollectorService_RedisOperations", _test.BenchmarkCollectorService_RedisOperations},

	{"BenchmarkCollectorService_WorkerPoolPerformance", _test.BenchmarkCollectorService_WorkerPoolPerformance},

	{"BenchmarkCollectorService_MemoryUsage", _test.BenchmarkCollectorService_MemoryUsage},

	{"BenchmarkAssessSignalQuality", _test.BenchmarkAssessSignalQuality},

	{"BenchmarkCalculateExchangeScore", _test.BenchmarkCalculateExchangeScore},

	{"BenchmarkCalculateSMA", _test.BenchmarkCalculateSMA},

	{"BenchmarkCalculateRSI", _test.BenchmarkCalculateRSI},

	{"BenchmarkCalculateAllIndicators", _test.BenchmarkCalculateAllIndicators},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "github.com/irfandi/celebrum-ai-go/internal/services"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	_test.TestMain(m)
	os.Exit(int(reflect.ValueOf(m).Elem().FieldByName("exitCode").Int()))

}

