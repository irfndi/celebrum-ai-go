version: '3.8'

services:
  postgres:
    image: postgres:17
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - celebrum-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - celebrum-network

  ccxt-service:
    build:
      context: ./ccxt-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - celebrum-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8081:8080"
    env_file:
      - .env
    environment:
      CCXT_SERVICE_URL: "http://ccxt-service:3001"
      CONFIG_PATH: "config.local.yml"
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ccxt-service:
        condition: service_healthy
    networks:
      - celebrum-network

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8082:8080"
    profiles:
      - dev-tools
    networks:
      - celebrum-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    ports:
      - "8083:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    profiles:
      - dev-tools
    networks:
      - celebrum-network

volumes:
  postgres_data:
  redis_data:

networks:
  celebrum-network:
    driver: bridge
